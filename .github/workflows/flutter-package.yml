name: Flutter package

on:
  workflow_call:
    inputs:
      release:
        description: Whether to run the release step
        required: true
        type: boolean
    secrets:
      GH_APP_ID:
        description: The GitHub App ID to use for authentication
        required: true
      GH_APP_PRIVATE_KEY:
        description: The GitHub App private key to use for authentication
        required: true
      GOOGLE_SERVICE_ACCOUNT_KEY:
        description: The Google service account key to use for publishing the package
        required: true
      CODECOV_TOKEN:
        description: The Codecov token to upload test coverage report
        required: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Get project Flutter version 🏷️
        id: fvm-config
        uses: kuhnroyal/flutter-fvm-config-action@v2

      - name: Setup Flutter 💻
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: ${{ steps.fvm-config.outputs.FLUTTER_CHANNEL }}
          cache: true

      - name: Run tests 🧪
        run: |
          flutter pub get
          flutter test --coverage

      - name: Upload coverage report 📡
        uses: codecov/codecov-action@v4.1.1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Get project Flutter version 🏷️
        id: fvm-config
        uses: kuhnroyal/flutter-fvm-config-action@v2

      - name: Setup Flutter 💻
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: ${{ steps.fvm-config.outputs.FLUTTER_CHANNEL }}
          cache: true

      - name: Run linting 🧪
        run: |
          flutter pub get
          dart format --output=none --set-exit-if-changed .
          flutter analyze

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: ${{ inputs.release == true }}

    steps:
      - name: Create GitHub App token 🔑
        id: create-app-token
        uses: tibdex/github-app-token@v2.1.0
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Get project Flutter version 🏷️
        id: fvm-config
        uses: kuhnroyal/flutter-fvm-config-action@v1.2.0

      - name: Setup Flutter 💻
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: ${{ steps.fvm-config.outputs.FLUTTER_CHANNEL }}
          cache: true

      - name: Setup Node 💻
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn

      - name: Install dependencies 📦
        run: yarn

      - name: Release 🚀
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ steps.create-app-token.outputs.token }}
          GOOGLE_SERVICE_ACCOUNT_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
